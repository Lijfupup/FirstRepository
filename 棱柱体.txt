将考虑接触流形的代码添加到之前的代码中，帮我写一段C++代码用于实现二维情况下的接触检测算法，算法采用GJK和EPA算法，输入为多边形的顶点，输出为是否接触、接触方向、接触深度和接触点的位置。接触点的位置计算时应考虑接触流行，能够处理边与边的接触时输出为接触边的中点。将这个函数导出为dll，另外再写一个main程序用于验证此dll中的函数的可行性。


帮我写一段C++代码用于实现二维情况下的接触检测算法，算法采用GJK和EPA算法，输入为多边形的顶点，输出为是否接触、接触方向、接触深度和接触点的位置。
  //根据接触方向向量ContactVector(始终由多边形A指向多边形B)，
  //寻找多边形A的各边法线中与此法向方向接近的边，有则返回两点的位置，没有则返回false
  //寻找多边形B的各边法线中与此法向方向的反方向接近的边，有则返回两点的位置，没有则返回false
  //(1)同为ture，则分3种情况讨论，A的边包含B的边，B的边包含A的边，A和B互相交叉。分别取重合部分的中点作为接触点
  //(2)同为false，则直接返回支撑点
  //(3)多边形A为ture，多边形B为false，则A返回边上的投影点，B返回支撑点
  //(4)多边形A为false，多边形B为ture，则A返回支撑点，B返回边上的投影点
将这个函数导出为dll，另外再写一个main程序用于验证此dll中的函数的可行性。